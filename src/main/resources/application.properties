#服务器端口配置
server.port=19000
#配置Tomcat编码，默认为UTF-8
server.tomcat.uri-encoding=UTF-8

#mapper
mapper.mappers=com.bonaparte.util.MyMapper
mapper.basePackage=com.bonaparte.dao.mapper
mapper.entityPackage=com.bonaparte.entity

#mysql数据源配置
spring.datasource.url=jdbc:mysql://***:3306/partyconstructionl?useUnicode=true&amp;characterEncoding=UTF-8&autoReconnect=true
spring.datasource.username=*
spring.datasource.password=*
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.filters=stat
spring.datasource.maxActive=200
spring.datasource.initialSize=1
spring.datasource.maxWait=60000
spring.datasource.minIdle=1
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20

#mongodb
spring.data.mongodb.host=
spring.data.mongodb.port=27100
spring.data.mongodb.database=payinfo

#微信公众号配置
corpid=
secret=
access_token_url=https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=%s&corpsecret=%s

spring.http.multipart.max-file-size=50mb
spring.http.multipart.max-request-size=50mb

#redis线程池配置
redis.poolMaxIdle=10
redis.poolMaxTotal=500
redis.poolMaxWaitMillis=100000
redis.poolTestOnBorrow=true
redis.commandTimeout = 10000
redis.clusterNodes =redis0:6301,redis1:6301,redis2:6301,reids0:6501,redis1:6501,redis2:6501

#扫码支付获取二维码接口
weixin.mchId=
weixin.appId=
weixin.wxUnifiedorder=https://api.mch.weixin.qq.com/pay/unifiedorder
weixin.key=
weixin.notifyUrl=http://www.xxx.com/charge/weixinPayCallback

#服务器地址
memcache.servers=127.0.0.1:11211
memcache.initConn=20
#每隔服务器建立的最小连接数
memcache.minConn=10
#每个服务器建立的最大连接数
memcache.maxConn=50
#自查线程周期进行工作，其每次休眠时间
memcache.maintSleep=3000
#Socket的参数，如果为true在写数据时不缓冲，立即发送出去
memcache.nagle=false
#Socket阻塞读取数据的超时时间
memcache.socketTO=3000
memcache.failover=true

#zookeeper
zookeeper.servers=&&&&:20881

#kafka producer
spring.kafka.producer.bootstrap-servers=*:9092,*:9092,*:9092
spring.kafka.producer.batch-size=65536
spring.kafka.producer.acks=1
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.retries=3
spring.kafka.producer.buffer-memory=4194304

#kafka consumer
spring.kafka.bootstrap-servers=*:9092,*:9092,*:9092
spring.kafka.consumer.group_id=ponaparte-kafka-test-group
spring.kafka.consumer.topic=ponaparte-kafka-test
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.auto-commit-interval=5000
spring.kafka.consumer.heartbeat-interval=1000
spring.kafka.consumer.max-poll-records=100

#RocketMq配置
ponaparte.rocketmq.namesrvAddr=127.0.0.1:9876
ponaparte.rocketmq.producerGroupName=ponaparte-rocketmq-test-group
ponaparte.rocketmq.transactionProducerGroupName=ponaparte-rocketmq-transaction-test-group
ponaparte.rocketmq.consumerGroupName=ponaparte-rocketmq-consumer-group
ponaparte.rocketmq.producerInstanceName=ponaparte-producerInstanceName
ponaparte.rocketmq.consumerInstanceName=ponaparte-consumerInstanceName
ponaparte.rocketmq.transactionProducerInstanceName=ponaparte-transactionInstanceName
ponaparte.rocketmq.consumerBatchMaxSize=1
ponaparte.rocketmq.consumerBroadcasting=false
ponaparte.rocketmq.enableHisConsumer=false
ponaparte.rocketmq.enableOrderConsumer=false
ponaparte.rocketmq.subscribe[0]=ponaparte-kafka-test:taga

#ElasticSearch
elasticsearch.cluster-nodes=127.0.0.1:9300
elasticsearch.index=ponaparte
elasticsearch.name=
elasticsearch.url=elasticsearch.url=http://127.0.0.1:9200/%s/%s/_search?search_type=dfs_query_then_fetch
elasticsearch.maxQueryNum=1000

#tencent cloud 配置
tencentcloud.facedetect=http://recognition.image.myqcloud.com/face/detect
tencentcloud.appId=
tencentcloud.secretId=
tencentcloud.secretKey=
tencentcloud.bucketName=
tencentcloud.imgBaseUrl=https://***.cos.ap-chengdu.myqcloud.com/